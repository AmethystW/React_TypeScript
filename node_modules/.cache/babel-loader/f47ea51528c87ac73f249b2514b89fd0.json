{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\51651\\\\Desktop\\\\ReactTypescript\\\\demo\\\\src\\\\components\\\\video.tsx\";\nimport React from 'react';\nexport default class Video extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      fdir: []\n    };\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  // public submitHandler(){\n  //     let a =(document.getElementById(\"fileinput\") as HTMLInputElement).value  //ts必须进行强制转换才能读取vlaue\n  //     console.log(a)\n  //     let tempFdir = this.state.fdir\n  //     let tempCount = this.state.count+1\n  //     tempFdir.push(a)\n  //     console.log(tempCount,tempFdir);\n  //     // console.log(this.state.count,this.state.fdir)\n  //     this.setState({\n  //         count:tempCount,\n  //         fdir:tempFdir   \n  //     }) \n  //     if(this.state.fdir[0]===\"\"){\n  //         alert(\"请选择文件\")\n  //     }\n  //     else{\n  //         let a=\"上传文件为\"\n  //         for(let i=0;i<this.state.fdir.length;i++){\n  //             a=a+\" \"+this.state.fdir[i]\n  //             console.log(i,a)\n  //         }\n  //         alert(a)\n  //     }\n  // }\n  clickHandler() {\n    // //fetch方法\n    // var file =(document.getElementById(\"fileinput\") as HTMLInputElement).value\n    // var formData = new FormData(); //创建表单数据对象\n    // formData.append('file',file); //将文件添加到表单对象中\n    // console.log(file);\n    // fetch(\"http://localhost:3000\",{       //传输\n    //     method :\"post\",\n    //     // body: formData,\n    //     headers:{\n    //         \"Content-Type\": \"multipart/form-data\"\n    //     }\n    // }) \n    // .then((d:any)=>{\n    //     var percent = (d.loaded / d.total) * 100 + '%';\n    //     let progress = (document.getElementById(\"progress\") as HTMLDivElement)\n    //     console.log(percent);\n    //     progress.style.width = percent;\n    //     progress.textContent = percent;\n    //     console.log('result is',d);\n    // })\n    var xhr = new XMLHttpRequest();\n    var oloaded;\n    var ot;\n    var fileObj = document.getElementById(\"fileinput\").value; // js 获取文件对象\n\n    var url = \"http://localhost:3000\"; // 接收上传文件的服务器地址！！！\n\n    var form = new FormData(); // FormData 对象\n\n    form.append(\"file\", fileObj); // 文件对象\n\n    xhr = new XMLHttpRequest(); // XMLHttpRequest 对象\n\n    xhr.open(\"post\", url, true); //post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。\n\n    xhr.onload = uploadComplete; //请求完成\n\n    xhr.onerror = uploadFailed; //请求失败\n\n    xhr.upload.onprogress = progressFunction; //【上传进度调用方法实现】\n\n    xhr.upload.onloadstart = function () {\n      //上传开始执行方法\n      ot = new Date().getTime(); //设置上传开始时间\n\n      oloaded = 0; //设置上传开始时，以上传的文件大小为0\n    };\n\n    xhr.send(form); //开始上传，发送form数据\n    //上传成功响应\n\n    function uploadComplete(evt) {\n      //服务断接收完文件返回的结果\n      var data = JSON.parse(evt.target.responseText);\n\n      if (data.success) {\n        alert(\"上传成功！\");\n      } else {\n        alert(\"上传失败！\");\n      }\n    } //上传失败\n\n\n    function uploadFailed(evt) {\n      alert(\"上传失败！\");\n    } //取消上传\n\n\n    function cancleUploadFile() {\n      xhr.abort();\n    } //上传进度实现方法，上传过程中会频繁调用该方法\n\n\n    function progressFunction(evt) {\n      var progressBar = document.getElementById(\"progressBar\");\n      var percentageDiv = document.getElementById(\"percentage\"); // event.total是需要传输的总字节，event.loaded是已经传输的字节。如果event.lengthComputable不为真，则event.total等于0\n\n      if (evt.lengthComputable) {\n        //\n        progressBar.max = evt.total;\n        progressBar.value = evt.loaded;\n        percentageDiv.innerHTML = Math.round(evt.loaded / evt.total * 100) + \"%\";\n      }\n\n      var time = document.getElementById(\"time\");\n      var nt = new Date().getTime(); //获取当前时间\n\n      var pertime = (nt - ot) / 1000; //计算出上次调用该方法时到现在的时间差，单位为s\n\n      ot = new Date().getTime(); //重新赋值时间，用于下次计算\n\n      var perload = evt.loaded - oloaded; //计算该分段上传的文件大小，单位b\n\n      oloaded = evt.loaded; //重新赋值已上传文件大小，用以下次计算\n      //上传速度计算\n\n      var speed = perload / pertime; //单位b/s\n\n      var bspeed = speed;\n      var units = 'b/s'; //单位名称\n\n      if (speed / 1024 > 1) {\n        speed = speed / 1024;\n        units = 'k/s';\n      }\n\n      if (speed / 1024 > 1) {\n        speed = speed / 1024;\n        units = 'M/s';\n      }\n\n      speed = Number(speed.toFixed(1)); //剩余时间\n\n      var resttime = ((evt.total - evt.loaded) / bspeed).toFixed(1);\n      time.innerHTML = '，速度：' + speed + units + '，剩余时间：' + resttime + 's';\n      if (bspeed == 0) time.innerHTML = '上传已取消';\n    }\n  }\n\n  setForm() {\n    // let sumitForm=new FormData\n    // let form = (document.getElementById(\"uploadForm\") as HTMLFormElement)        \n    let file = document.querySelector('[type=file]'); // 新建FormData对象\n\n    let formData = new FormData(); // 取得input标签中的文件。注：input标签中的文件可以选择多个\n\n    formData.append('upload', file.value); //创建XMLHttpRequest，用这个来发送数据\n\n    var xhr = new XMLHttpRequest();\n    /*初始化HTTP请求参数(请求方式,url,是否同步)*/\n\n    xhr.open('post', './');\n    /*\r\n    xmlhttp.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\r\n    设置请求头的contentType\r\n    */\n    // 监听上传进度\n\n    xhr.upload.onprogress = function (ev) {\n      // 事件对象\n      // console.log(ev);\n      var percent = ev.loaded / ev.total * 100 + '%';\n      let progress = document.getElementById(\"progress\");\n      console.log(percent);\n      progress.style.width = percent;\n      progress.textContent = percent;\n    };\n\n    xhr.send(formData);\n\n    xhr.onreadystatechange = function () {\n      //status状态为200 表示请求成功，readystate为4表示对象传递完毕或者准备就绪 \n      if (xhr.readyState === 4 && xhr.status === 200) {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"fileinput\",\n      type: \"file\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.clickHandler,\n      value: \"\\u4E0A\\u4F20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u8FDB\\u5EA6\\uFF1A\")), React.createElement(\"progress\", {\n      id: \"progressBar\",\n      value: \"0\",\n      max: \"100\",\n      style: {\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"percentage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/51651/Desktop/ReactTypescript/demo/src/components/video.tsx"],"names":["React","Video","Component","constructor","props","state","count","fdir","clickHandler","bind","xhr","XMLHttpRequest","oloaded","ot","fileObj","document","getElementById","value","url","form","FormData","append","open","onload","uploadComplete","onerror","uploadFailed","upload","onprogress","progressFunction","onloadstart","Date","getTime","send","evt","data","JSON","parse","target","responseText","success","alert","cancleUploadFile","abort","progressBar","percentageDiv","lengthComputable","max","total","loaded","innerHTML","Math","round","time","nt","pertime","perload","speed","bspeed","units","Number","toFixed","resttime","setForm","file","querySelector","formData","ev","percent","progress","console","log","style","width","textContent","onreadystatechange","readyState","status","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\ninterface Istate{\r\n    count:number\r\n    fdir:string[]\r\n}\r\n\r\nexport default class Video extends React.Component<any,Istate>{\r\n    public constructor(props:any) {\r\n      super(props);\r\n      this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n    \r\n    public state:Readonly<Istate>={\r\n        count:0,\r\n        fdir:[]\r\n    }\r\n\r\n    // public submitHandler(){\r\n    //     let a =(document.getElementById(\"fileinput\") as HTMLInputElement).value  //ts必须进行强制转换才能读取vlaue\r\n    //     console.log(a)\r\n    //     let tempFdir = this.state.fdir\r\n    //     let tempCount = this.state.count+1\r\n    //     tempFdir.push(a)\r\n    //     console.log(tempCount,tempFdir);\r\n    //     // console.log(this.state.count,this.state.fdir)\r\n    //     this.setState({\r\n    //         count:tempCount,\r\n    //         fdir:tempFdir   \r\n    //     }) \r\n    //     if(this.state.fdir[0]===\"\"){\r\n    //         alert(\"请选择文件\")\r\n    //     }\r\n    //     else{\r\n    //         let a=\"上传文件为\"\r\n    //         for(let i=0;i<this.state.fdir.length;i++){\r\n    //             a=a+\" \"+this.state.fdir[i]\r\n    //             console.log(i,a)\r\n    //         }\r\n    //         alert(a)\r\n    //     }\r\n    // }\r\n\r\n    public clickHandler(){\r\n        // //fetch方法\r\n        // var file =(document.getElementById(\"fileinput\") as HTMLInputElement).value\r\n        // var formData = new FormData(); //创建表单数据对象\r\n        // formData.append('file',file); //将文件添加到表单对象中\r\n        // console.log(file);\r\n        \r\n        // fetch(\"http://localhost:3000\",{       //传输\r\n        //     method :\"post\",\r\n        //     // body: formData,\r\n        //     headers:{\r\n        //         \"Content-Type\": \"multipart/form-data\"\r\n        //     }\r\n        // }) \r\n        // .then((d:any)=>{\r\n        //     var percent = (d.loaded / d.total) * 100 + '%';\r\n        //     let progress = (document.getElementById(\"progress\") as HTMLDivElement)\r\n        //     console.log(percent);\r\n        //     progress.style.width = percent;\r\n        //     progress.textContent = percent;\r\n        //     console.log('result is',d);\r\n        // })\r\n\r\n        \r\n        var xhr = new XMLHttpRequest()\r\n        var oloaded:any\r\n        var ot:any\r\n\r\n        var fileObj = (document.getElementById(\"fileinput\") as HTMLInputElement).value // js 获取文件对象\r\n        var url =  \"http://localhost:3000\" // 接收上传文件的服务器地址！！！\r\n\r\n        var form = new FormData(); // FormData 对象\r\n        form.append(\"file\", fileObj); // 文件对象\r\n\r\n        xhr = new XMLHttpRequest();  // XMLHttpRequest 对象\r\n        \r\n        xhr.open(\"post\", url, true); //post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。\r\n        xhr.onload = uploadComplete; //请求完成\r\n        xhr.onerror =  uploadFailed; //请求失败\r\n\r\n        xhr.upload.onprogress = progressFunction;//【上传进度调用方法实现】\r\n        xhr.upload.onloadstart = function(){//上传开始执行方法\r\n            ot = new Date().getTime();   //设置上传开始时间\r\n            oloaded = 0;//设置上传开始时，以上传的文件大小为0\r\n        };\r\n\r\n        xhr.send(form); //开始上传，发送form数据\r\n\r\n        //上传成功响应\r\n        function uploadComplete(evt:any) {\r\n            //服务断接收完文件返回的结果\r\n            var data = JSON.parse(evt.target.responseText);\r\n            if(data.success) {\r\n                alert(\"上传成功！\");\r\n            }else{\r\n                alert(\"上传失败！\");\r\n            }\r\n\r\n        }\r\n        //上传失败\r\n        function uploadFailed(evt:any) {\r\n            alert(\"上传失败！\");\r\n        }\r\n        //取消上传\r\n        function cancleUploadFile(){\r\n            xhr.abort();\r\n        }\r\n\r\n        //上传进度实现方法，上传过程中会频繁调用该方法\r\n        function progressFunction(evt:any) {\r\n            var progressBar = document.getElementById(\"progressBar\") as HTMLProgressElement;\r\n            var percentageDiv = document.getElementById(\"percentage\") as HTMLSpanElement;\r\n            // event.total是需要传输的总字节，event.loaded是已经传输的字节。如果event.lengthComputable不为真，则event.total等于0\r\n            if (evt.lengthComputable) {//\r\n                progressBar.max = evt.total;\r\n                progressBar.value = evt.loaded;\r\n                percentageDiv.innerHTML = Math.round(evt.loaded / evt.total * 100) + \"%\";\r\n            }\r\n            var time = document.getElementById(\"time\") as HTMLSpanElement;\r\n            var nt = new Date().getTime();//获取当前时间\r\n            var pertime = (nt-ot)/1000; //计算出上次调用该方法时到现在的时间差，单位为s\r\n            ot = new Date().getTime(); //重新赋值时间，用于下次计算\r\n            var perload = evt.loaded - oloaded; //计算该分段上传的文件大小，单位b\r\n            oloaded = evt.loaded;//重新赋值已上传文件大小，用以下次计算\r\n            //上传速度计算\r\n            var speed = perload/pertime;//单位b/s\r\n            var bspeed = speed;\r\n            var units = 'b/s';//单位名称\r\n            if(speed/1024>1){\r\n                speed = speed/1024;\r\n                units = 'k/s';\r\n            }\r\n            if(speed/1024>1){\r\n                speed = speed/1024;\r\n                units = 'M/s';\r\n            }\r\n            speed = Number(speed.toFixed(1));\r\n            //剩余时间\r\n            var resttime = ((evt.total-evt.loaded)/bspeed).toFixed(1);\r\n            time.innerHTML = '，速度：'+speed+units+'，剩余时间：'+resttime+'s';\r\n            if(bspeed==0) time.innerHTML = '上传已取消';\r\n        }\r\n    }\r\n\r\n    \r\n    public setForm(){\r\n        // let sumitForm=new FormData\r\n        // let form = (document.getElementById(\"uploadForm\") as HTMLFormElement)        \r\n        let file = (document.querySelector('[type=file]') as HTMLInputElement)\r\n        // 新建FormData对象\r\n        let formData = new FormData();\r\n        // 取得input标签中的文件。注：input标签中的文件可以选择多个\r\n        formData.append('upload', file.value);\r\n        //创建XMLHttpRequest，用这个来发送数据\r\n        var xhr = new XMLHttpRequest();\r\n        /*初始化HTTP请求参数(请求方式,url,是否同步)*/\r\n        xhr.open('post', './');\r\n        \r\n        /*\r\n        xmlhttp.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\r\n        设置请求头的contentType\r\n        */\r\n        \r\n        // 监听上传进度\r\n        xhr.upload.onprogress = function (ev) {\r\n        // 事件对象\r\n        // console.log(ev);\r\n            var percent = (ev.loaded / ev.total) * 100 + '%';\r\n            let progress = (document.getElementById(\"progress\") as HTMLDivElement)\r\n            console.log(percent);\r\n            progress.style.width = percent;\r\n            progress.textContent = percent;\r\n        }\r\n\r\n        xhr.send(formData);\r\n\r\n        xhr.onreadystatechange = function () {\r\n        //status状态为200 表示请求成功，readystate为4表示对象传递完毕或者准备就绪 \r\n                if(xhr.readyState === 4 && xhr.status === 200) {\r\n                }\r\n        }\r\n    }\r\n    \r\n    public render() {\r\n      return (\r\n        <div>\r\n            <div>\r\n                <input id=\"fileinput\" type=\"file\" multiple={true}/>\r\n                <input type=\"button\" onClick={this.clickHandler} value=\"上传\" />\r\n            </div>\r\n            <div>\r\n                <label >上传进度：</label>\r\n            </div>\r\n            <progress id=\"progressBar\" value=\"0\" max=\"100\" style={{width:300}}></progress>\r\n            <span id=\"percentage\"></span><span id=\"time\"></span> \r\n            {/* <video src={this.state.fdir[0]} controls={true} preload=\"auto\" autoPlay> */}\r\n                {/* <source src=\"../2.mp4\"  type=\"video/webm\"/> */}\r\n                {/* 您的浏览器不支持播放该视频！ */}\r\n           {/* </video> */}\r\n        </div>\r\n      );\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}